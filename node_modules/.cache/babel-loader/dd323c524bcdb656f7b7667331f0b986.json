{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nuseClock.propTypes = {};\n\nfunction formatDate() {\n  const date = new Date();\n  const hours = `0${date.getHours()}`.slice(-2);\n  const minutes = `0${date.getMinutes()}`.slice(-2);\n  const seconds = `0${date.getSeconds()}`.slice(-2);\n  return `${hours}:${minutes}:${seconds}`;\n}\n\nfunction useClock() {\n  _s();\n\n  const [timeString, setTimeString] = useState(\"\");\n  useEffect(() => {\n    const intervalClock = setInterval(() => {\n      const now = new Date();\n      const newTimeString = formatDate(now);\n      setTimeString(newTimeString);\n    }, 1000);\n    return () => {\n      console.log(\"cleanup\");\n      clearInterval(intervalClock);\n    };\n  }, []);\n  return {\n    timeString\n  };\n}\n\n_s(useClock, \"ioUxC2UHkDo17WDxV6PjYVLqu/A=\");\n\nexport default useClock;","map":{"version":3,"sources":["C:/Users/maitr/OneDrive/Desktop/react/react-hook-basic/src/hooks/useClock.js"],"names":["useEffect","useState","useClock","propTypes","formatDate","date","Date","hours","getHours","slice","minutes","getMinutes","seconds","getSeconds","timeString","setTimeString","intervalClock","setInterval","now","newTimeString","console","log","clearInterval"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEAC,QAAQ,CAACC,SAAT,GAAqB,EAArB;;AACA,SAASC,UAAT,GAAsB;AACpB,QAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AAEA,QAAMC,KAAK,GAAI,IAAGF,IAAI,CAACG,QAAL,EAAgB,EAApB,CAAsBC,KAAtB,CAA4B,CAAC,CAA7B,CAAd;AACA,QAAMC,OAAO,GAAI,IAAGL,IAAI,CAACM,UAAL,EAAkB,EAAtB,CAAwBF,KAAxB,CAA8B,CAAC,CAA/B,CAAhB;AACA,QAAMG,OAAO,GAAI,IAAGP,IAAI,CAACQ,UAAL,EAAkB,EAAtB,CAAwBJ,KAAxB,CAA8B,CAAC,CAA/B,CAAhB;AAEA,SAAQ,GAAEF,KAAM,IAAGG,OAAQ,IAAGE,OAAQ,EAAtC;AACD;;AACD,SAASV,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,aAAa,GAAGC,WAAW,CAAC,MAAM;AACtC,YAAMC,GAAG,GAAG,IAAIZ,IAAJ,EAAZ;AACA,YAAMa,aAAa,GAAGf,UAAU,CAACc,GAAD,CAAhC;AACAH,MAAAA,aAAa,CAACI,aAAD,CAAb;AACD,KAJgC,EAI9B,IAJ8B,CAAjC;AAKA,WAAO,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAC,MAAAA,aAAa,CAACN,aAAD,CAAb;AACD,KAHD;AAID,GAVQ,EAUN,EAVM,CAAT;AAWA,SAAO;AAAEF,IAAAA;AAAF,GAAP;AACD;;GAfQZ,Q;;AAiBT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nuseClock.propTypes = {};\r\nfunction formatDate() {\r\n  const date = new Date();\r\n\r\n  const hours = `0${date.getHours()}`.slice(-2);\r\n  const minutes = `0${date.getMinutes()}`.slice(-2);\r\n  const seconds = `0${date.getSeconds()}`.slice(-2);\r\n\r\n  return `${hours}:${minutes}:${seconds}`;\r\n}\r\nfunction useClock() {\r\n  const [timeString, setTimeString] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const intervalClock = setInterval(() => {\r\n      const now = new Date();\r\n      const newTimeString = formatDate(now);\r\n      setTimeString(newTimeString);\r\n    }, 1000);\r\n    return () => {\r\n      console.log(\"cleanup\");\r\n      clearInterval(intervalClock);\r\n    };\r\n  }, []);\r\n  return { timeString };\r\n}\r\n\r\nexport default useClock;\r\n"]},"metadata":{},"sourceType":"module"}