{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maitr\\\\OneDrive\\\\Desktop\\\\react\\\\react-hook-basic\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport \"./App.scss\";\nimport PostList from \"./components/PostList\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport Pagination from \"./components/Pagination\";\nimport PostFilterForm from \"./components/PostFilterForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todoList, setItem] = useState([{\n    id: 1,\n    title: \"abc\"\n  }, {\n    id: 2,\n    title: \"abcd\"\n  }, {\n    id: 3,\n    title: \"abce\"\n  }, {\n    id: 4,\n    title: \"abcf\"\n  }]);\n  const [postList, setListPost] = useState([]);\n  const [pagination, setPagination] = useState({\n    _page: 1,\n    _limit: 10,\n    _totalRows: 11\n  });\n  const [filters, setFilters] = useState({\n    _limit: 10,\n    _page: 1\n  });\n  useEffect(() => {\n    async function fetchPostList() {\n      try {\n        const paramString = queryString.stringify(filters);\n        const requestUrl = `http://js-post-api.herokuapp.com/api/posts?${paramString}`;\n        const response = await fetch(requestUrl);\n        const responseJSON = await response.json();\n        console.log({\n          responseJSON\n        });\n        const {\n          data,\n          pagination\n        } = responseJSON;\n        setListPost(data);\n        setPagination(pagination);\n      } catch (error) {\n        console.log(\"failed to fetch post link\", error.message);\n      }\n    }\n\n    fetchPostList();\n  }, [filters]);\n\n  function handlePageChange(newPage) {\n    console.log(\"New Page:\", newPage);\n    setFilters({ ...filters,\n      _page: newPage\n    });\n  }\n\n  function handleOnClick(todo) {\n    console.log(todo);\n    const index = todoList.findIndex(x => x.id === todo.id);\n    if (index < 0) return;\n    const newTodoList = [...todoList];\n    newTodoList.splice(index, 1);\n    setItem(newTodoList);\n  }\n\n  function handleTodoFormSubmit(formValues) {\n    console.log(\"for submit:\", formValues);\n    const newTodo = {\n      id: todoList.length + 1,\n      ...formValues\n    };\n    const newTodoList = [...todoList];\n    newTodoList.push(newTodo);\n    setItem(newTodoList);\n  }\n\n  function handleFilterChange(newFilter) {\n    console.log(newFilter);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Hooks- TodoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilterForm, {\n      onSubmit: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: postList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      pagination: pagination,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9yE5vp4Wxwan0hQyWLx23NFyRw8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/maitr/OneDrive/Desktop/react/react-hook-basic/src/App.js"],"names":["React","useEffect","useState","queryString","PostList","TodoForm","TodoList","Pagination","PostFilterForm","App","todoList","setItem","id","title","postList","setListPost","pagination","setPagination","_page","_limit","_totalRows","filters","setFilters","fetchPostList","paramString","stringify","requestUrl","response","fetch","responseJSON","json","console","log","data","error","message","handlePageChange","newPage","handleOnClick","todo","index","findIndex","x","newTodoList","splice","handleTodoFormSubmit","formValues","newTodo","length","push","handleFilterChange","newFilter"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport \"./App.scss\";\nimport PostList from \"./components/PostList\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport Pagination from \"./components/Pagination\";\nimport PostFilterForm from \"./components/PostFilterForm\";\n\nfunction App() {\n  const [todoList, setItem] = useState([\n    {\n      id: 1,\n      title: \"abc\",\n    },\n    {\n      id: 2,\n      title: \"abcd\",\n    },\n    {\n      id: 3,\n      title: \"abce\",\n    },\n    {\n      id: 4,\n      title: \"abcf\",\n    },\n  ]);\n\n  const [postList, setListPost] = useState([]);\n  const [pagination, setPagination] = useState({\n    _page: 1,\n    _limit: 10,\n    _totalRows: 11,\n  });\n  const [filters, setFilters] = useState({\n    _limit: 10,\n    _page: 1,\n  });\n\n  useEffect(() => {\n    async function fetchPostList() {\n      try {\n        const paramString = queryString.stringify(filters);\n\n        const requestUrl = `http://js-post-api.herokuapp.com/api/posts?${paramString}`;\n        const response = await fetch(requestUrl);\n        const responseJSON = await response.json();\n        console.log({ responseJSON });\n\n        const { data, pagination } = responseJSON;\n        setListPost(data);\n        setPagination(pagination);\n      } catch (error) {\n        console.log(\"failed to fetch post link\", error.message);\n      }\n    }\n\n    fetchPostList();\n  }, [filters]);\n\n  function handlePageChange(newPage) {\n    console.log(\"New Page:\", newPage);\n    setFilters({\n      ...filters,\n      _page: newPage,\n    });\n  }\n\n  function handleOnClick(todo) {\n    console.log(todo);\n    const index = todoList.findIndex((x) => x.id === todo.id);\n    if (index < 0) return;\n\n    const newTodoList = [...todoList];\n    newTodoList.splice(index, 1);\n    setItem(newTodoList);\n  }\n  function handleTodoFormSubmit(formValues) {\n    console.log(\"for submit:\", formValues);\n    const newTodo = {\n      id: todoList.length + 1,\n      ...formValues,\n    };\n    const newTodoList = [...todoList];\n    newTodoList.push(newTodo);\n    setItem(newTodoList);\n  }\n\n  function handleFilterChange(newFilter) {\n    console.log(newFilter);\n  }\n  return (\n    <div className=\"app\">\n      <h1>React Hooks- TodoList</h1>\n\n      {/* <TodoForm onSubmit={handleTodoFormSubmit} />\n      <TodoList todos={todoList} onTodoClick={handleOnClick} /> */}\n      <PostFilterForm onSubmit={handleFilterChange} />\n      <PostList posts={postList} />\n      <Pagination pagination={pagination} onPageChange={handlePageChange} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}